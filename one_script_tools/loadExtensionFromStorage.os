#Использовать v8runner
#Использовать cmdline

Перем СЕРВЕР;
Перем СЕРВЕР_ПОРТ;
Перем БАЗА;
Перем ЭТО_ФАЙЛОВАЯ_БАЗА;
Перем ПОЛЬЗОВАТЕЛЬ;
Перем ХРАНИЛИЩЕ_ПОЛЬЗОВАТЕЛЬ;
Перем ХРАНИЛИЩЕ_ПАРОЛЬ;
Перем ПАРОЛЬ;
Перем ПЛАТФОРМА_ВЕРСИЯ;
Перем ИМЯ_РАСШИРЕНИЯ;
Перем ХРАНИЛИЩЕ_РАСШИРЕНИЯ;

Перем Конфигуратор;
Перем Лог;

Функция Инициализация()

    Парсер = Новый ПарсерАргументовКоманднойСтроки();
    Парсер.ДобавитьИменованныйПараметр("-platform");
    Парсер.ДобавитьИменованныйПараметр("-server");
    Парсер.ДобавитьИменованныйПараметр("-base");
    Парсер.ДобавитьИменованныйПараметр("-user");
    Парсер.ДобавитьИменованныйПараметр("-passw");
    Парсер.ДобавитьИменованныйПараметр("-user");
    Парсер.ДобавитьИменованныйПараметр("-repostorage");
    Парсер.ДобавитьИменованныйПараметр("-repouser");
    Парсер.ДобавитьИменованныйПараметр("-repopwd");
    Парсер.ДобавитьИменованныйПараметр("-extension");

    Параметры = Парсер.Разобрать(АргументыКоманднойСтроки);
    
    ПЛАТФОРМА_ВЕРСИЯ  = Параметры["-platform"];//"8.3.10.2639"; // если пустая строка, то будет взята последняя версия
    СЕРВЕР            =  Параметры["-server"];
    СЕРВЕР_ПОРТ       = 1541; // 1541 - по умолчанию
    БАЗА              = Параметры["-base"];
    ЭТО_ФАЙЛОВАЯ_БАЗА = Не ЗначениеЗаполнено(СЕРВЕР);
    ПОЛЬЗОВАТЕЛЬ      = Параметры["-user"];
    ПАРОЛЬ            = Параметры["-passw"];
    ИМЯ_РАСШИРЕНИЯ    = Параметры["-extension"];
    ХРАНИЛИЩЕ_РАСШИРЕНИЯ = Параметры["-repostorage"];
    ХРАНИЛИЩЕ_ПОЛЬЗОВАТЕЛЬ = Параметры["-repouser"];
    ХРАНИЛИЩЕ_ПАРОЛЬ = Параметры["-repopwd"];
    
    //ПЛАТФОРМА_ВЕРСИЯ  = "8.3.12.1685";
    //СЕРВЕР            = "devadapter";
    //СЕРВЕР_ПОРТ       = 1541; // 1541 - по умолчанию
    //БАЗА              = "custom_rkudakov_adapter_adapter";
    //ЭТО_ФАЙЛОВАЯ_БАЗА = Не ЗначениеЗаполнено(СЕРВЕР);
    //ПОЛЬЗОВАТЕЛЬ      = "Administrator";
    //ПАРОЛЬ            = "111";
    //ИМЯ_РАСШИРЕНИЯ    = "biterpExtension";
    //ХРАНИЛИЩЕ_РАСШИРЕНИЯ = "\\172.16.50.22\repos\83121685\adapter2_ext_adapter";
    //ХРАНИЛИЩЕ_ПОЛЬЗОВАТЕЛЬ = "auto";
    //ХРАНИЛИЩЕ_ПАРОЛЬ = "111";

    Конфигуратор = Новый УправлениеКонфигуратором();
    Конфигуратор.УстановитьКонтекст(СтрокаСоединенияИБ(), ПОЛЬЗОВАТЕЛЬ, ПАРОЛЬ);
    Конфигуратор.ИспользоватьВерсиюПлатформы(ПЛАТФОРМА_ВЕРСИЯ);

    Лог = Логирование.ПолучитьЛог("loadExtension");
    ЛОГ.Отладка("СЕРВЕР = " + СЕРВЕР);
    ЛОГ.Отладка("ПЛАТФОРМА_ВЕРСИЯ = " + ПЛАТФОРМА_ВЕРСИЯ);

КонецФункции

Функция ЗагрузитьРасширениеИзХранилища()

    Параметры = Конфигуратор.ПолучитьПараметрыЗапуска();
    Параметры.Добавить("/ConfigurationRepositoryF " + ХРАНИЛИЩЕ_РАСШИРЕНИЯ);
    Параметры.Добавить("/ConfigurationRepositoryN " + ХРАНИЛИЩЕ_ПОЛЬЗОВАТЕЛЬ);
    Параметры.Добавить("/ConfigurationRepositoryP " + ХРАНИЛИЩЕ_ПАРОЛЬ);
    Параметры.Добавить("/ConfigurationRepositoryUpdateCfg -force -Extension " + ИМЯ_РАСШИРЕНИЯ);
    Конфигуратор.ВыполнитьКоманду(Параметры);

КонецФункции

Функция СтрокаСоединенияИБ() 
    Если ЭТО_ФАЙЛОВАЯ_БАЗА Тогда
        Возврат "/F" + БАЗА; 
    Иначе   
        Возврат "/IBConnectionString""Srvr=" + СЕРВЕР + ?(ЗначениеЗаполнено(СЕРВЕР_ПОРТ),":" + СЕРВЕР_ПОРТ,"") + ";Ref='"+ БАЗА + "'""";
    КонецЕсли;
КонецФункции

Инициализация();
Лог.Информация("Loading extension %1 for infobase %2 from storage %3", ИМЯ_РАСШИРЕНИЯ, БАЗА, ХРАНИЛИЩЕ_РАСШИРЕНИЯ);
ЗагрузитьРасширениеИзХранилища();
Лог.Информация("Sucessfuly loaded extension %1", ИМЯ_РАСШИРЕНИЯ);