#Использовать irac
#Использовать cmdline
#Использовать 1commands

Перем АДМИНКА;
Перем ЛОГ;
Перем СЕРВЕР;
Перем БАЗА;
Перем АДМИН_БАЗЫ;
Перем ПАРОЛЬ_БАЗЫ;
Перем ТИП_БЛОКИРОВКИ;

Процедура Инициализация()

    КОД_ИГНОРА_БАЗЫ = "ignore";

    ЛОГ = Логирование.ПолучитьЛог("block_sheduled_jobs");
    ЛОГ.УстановитьУровень(УровниЛога.Отладка);

    Парсер = Новый ПарсерАргументовКоманднойСтроки();

    Парсер.ДобавитьИменованныйПараметр("-rac");
    Парсер.ДобавитьИменованныйПараметр("-platform");
    Парсер.ДобавитьИменованныйПараметр("-base");
    Парсер.ДобавитьИменованныйПараметр("-admin1c");
    Парсер.ДобавитьИменованныйПараметр("-passw1c");
    Парсер.ДобавитьИменованныйПараметр("-lockingtype");

    Параметры = Парсер.Разобрать(АргументыКоманднойСтроки);
    СЕРВЕР = Параметры["-rac"];
    Платформа = Параметры["-platform"];
    Если Не ЗначениеЗаполнено(Платформа) Тогда
        Платформа = "8.3";
    КонецЕсли;
    БАЗА = Параметры["-base"];
    АДМИН_БАЗЫ = Параметры["-admin1c"];
    ПАРОЛЬ_БАЗЫ = Параметры["-passw1c"];
    ТИП_БЛОКИРОВКИ = Параметры["-lockingtype"];

    ЛОГ.Отладка("СЕРВЕР = " + СЕРВЕР);
    ЛОГ.Отладка("Платформа = " + Платформа);
    ЛОГ.Отладка("БАЗА = " + БАЗА);
    АДМИНКА = Новый АдминистрированиеКластера(СЕРВЕР, 1545, Платформа);
    
КонецПроцедуры

Процедура БлокироватьБазуКластера()
    
    Кластеры = АДМИНКА.Кластеры();
    // Обходим список кластеров
    Для Каждого Кластер Из Кластеры.Список() Цикл
        ЛОГ.Информация("Cluster name = " + Кластер.Получить("Имя"));
        ИБКластера = Кластер.ИнформационныеБазы();
        Отбор = Новый Соответствие();
        Отбор.Вставить("name", БАЗА);
        СписокБаз = ИБКластера.Список(Отбор);
        Для каждого ТекИБ Из СписокБаз Цикл
            ТекИБ.УстановитьАдминистратора(АДМИН_БАЗЫ, ПАРОЛЬ_БАЗЫ);
            НовыеПараметрыИБ = Новый Структура;
            НовыеПараметрыИБ.Вставить("ИмяПользователяБазыСУБД", "");
            НовыеПараметрыИБ.Вставить("ПарольПользователяБазыСУБД", "");
            Если ТИП_БЛОКИРОВКИ = "unlock" Тогда
                НовыеПараметрыИБ.Вставить("БлокировкаРегламентныхЗаданийВключена", "off");
            ИначеЕсли ТИП_БЛОКИРОВКИ = "lock" Тогда
                НовыеПараметрыИБ.Вставить("БлокировкаРегламентныхЗаданийВключена", "on");
            Иначе
                ВызватьИсключение "incorrect parameter lockingtype - " + ТИП_БЛОКИРОВКИ
            КонецЕсли;
            ЛОГ.Информация("Updating " + ТекИБ.Имя() + " attributes...");
            ТекИБ.Изменить(НовыеПараметрыИБ);
            ЛОГ.Информация("Database " + ТекИБ.Имя() + " updated");
        КонецЦикла;
    КонецЦикла;

КонецПроцедуры

Сообщить("Initialization...");
Инициализация();
ЛОГ.Информация("Initialization completed");
ЛОГ.Информация("Executing %1 %2 base...", ТИП_БЛОКИРОВКИ, БАЗА);
БлокироватьБазуКластера();
ЛОГ.Информация("%1 task completed", ТИП_БЛОКИРОВКИ);