#Использовать irac
#Использовать cmdline
#Использовать 1commands

Перем АДМИНКА;
Перем ЛОГ;
Перем СЕРВЕР;
Перем БАЗА;
Перем АДМИН_БАЗЫ;
Перем ПАРОЛЬ_БАЗЫ;

Процедура Инициализация()

    ЛОГ = Логирование.ПолучитьЛог("dropdb");
    ЛОГ.УстановитьУровень(УровниЛога.Отладка);

    Парсер = Новый ПарсерАргументовКоманднойСтроки();

    Парсер.ДобавитьИменованныйПараметр("-rac");
    Парсер.ДобавитьИменованныйПараметр("-platform");
    Парсер.ДобавитьИменованныйПараметр("-base");
    Парсер.ДобавитьИменованныйПараметр("-admin1c");
    Парсер.ДобавитьИменованныйПараметр("-passw1c");

    Параметры = Парсер.Разобрать(АргументыКоманднойСтроки);
    СЕРВЕР = Параметры["-rac"];
    Платформа = Параметры["-platform"];
    БАЗА = Параметры["-base"];
    АДМИН_БАЗЫ = Параметры["-admin1c"];
    ПАРОЛЬ_БАЗЫ = Параметры["-passw1c"];

    ЛОГ.Отладка("СЕРВЕР = " + СЕРВЕР);
    ЛОГ.Отладка("Платформа = " + Платформа);
    ЛОГ.Отладка("БАЗА = " + БАЗА);
    ЛОГ.Отладка("АДМИН_БАЗЫ = " + АДМИН_БАЗЫ);
    ЛОГ.Отладка("ПАРОЛЬ_БАЗЫ = " + ПАРОЛЬ_БАЗЫ);
    АДМИНКА = Новый АдминистрированиеКластера(СЕРВЕР, 1545, Платформа);
    
КонецПроцедуры

Процедура НайтиБазуПоИмени()
    
    Кластеры = АДМИНКА.Кластеры();
    // Обходим список кластеров
    БазаНайдена = Ложь;
    Для Каждого Кластер Из Кластеры.Список() Цикл
        ЛОГ.Информация("Cluster name = " + Кластер.Получить("Имя"));
        ИБКластера = Кластер.ИнформационныеБазы();
        Отбор = Новый Соответствие();
        Отбор.Вставить("name", БАЗА);
        СписокБаз = ИБКластера.Список(Отбор, Истина);
        Для каждого ТекИБ Из СписокБаз Цикл
            БазаНайдена = Истина;
            ТекИБ.УстановитьАдминистратора(АДМИН_БАЗЫ, ПАРОЛЬ_БАЗЫ);
            ИмяБазы = ТекИБ.Имя();
            // irac не умеет возвращать код ошибки, в случае неавторизованного доступа. 
            // Поэтмоу по этому полю определяем, есть ли у нас админиский доступ к базе
            ТекИБ.ОбновитьДанные(Истина);
            ИмяБазыСУБД = ТекИБ.Получить("ИмяБазыСУБД");
            Если ЗначениеЗаполнено(ИмяБазыСУБД) Тогда
                ЛОГ.Информация("Infobase with name %1 was found", ИмяБазы);
            Иначе
                ТекстОшибки = СтрШаблон("Cannot connect to base %1 with admiistrator ""%2"" and password ""%3""", ИмяБазы, АДМИН_БАЗЫ, ПАРОЛЬ_БАЗЫ);
                ЛОГ.КритичнаяОшибка(ТекстОшибки);
                ВызватьИсключение ТекстОшибки;
            КонецЕсли;
        КонецЦикла;
    КонецЦикла;

    Если Не БазаНайдена Тогда
        ВызватьИСключение СтрШаблон("Database on server %1 with naname %2 not found!", СЕРВЕР, БАЗА);
    КонецЕсли;

КонецПроцедуры

Сообщить("Initialization...");
Инициализация();
ЛОГ.Информация("Initialization completed");
ЛОГ.Информация("Executing RAS script...");
НайтиБазуПоИмени();
ЛОГ.Информация("RAS script executed");