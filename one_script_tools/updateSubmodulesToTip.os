#Использовать irac
#Использовать cmdline
#Использовать 1commands

Перем ЛОГ;
Перем РАБОЧИЙ_КАТАЛОГ;

Процедура Инициализация()

    ЛОГ = Логирование.ПолучитьЛог("block_sheduled_jobs");
	ЛОГ.УстановитьУровень(УровниЛога.Отладка);

	
    Парсер = Новый ПарсерАргументовКоманднойСтроки();
	Парсер.ДобавитьИменованныйПараметр("-workdir");
	
	Параметры = Парсер.Разобрать(АргументыКоманднойСтроки);

    РАБОЧИЙ_КАТАЛОГ = Параметры["-workdir"];

КонецПроцедуры

Процедура ОбновитьСабмодули()

    ИменаСабмодулей = ЗапросИменСабмодулей();

    Для каждого Сабмодуль Из ИменаСабмодулей Цикл

        ПутьКСабмодулю = РАБОЧИЙ_КАТАЛОГ + "/" + Сабмодуль;
        ЛОГ.Информация("Updating submodule %1...", ПутьКСабмодулю);

        Команда = Новый Команда;

        Параметры = Новый Массив;
        Параметры.Добавить("pull origin master");

        Команда.УстановитьКоманду("git");
        Команда.УстановитьКодировкуВывода(КодировкаТекста.Системная);
        Команда.УстановитьРабочийКаталог(ПутьКСабмодулю);
        Команда.ДобавитьПараметры(Параметры);
        Команда.УстановитьИсполнениеЧерезКомандыСистемы(Ложь);
        Команда.ПоказыватьВыводНемедленно(Истина);
        КодВозврата = Команда.Исполнить();

        ЛОГ.Информация("Submodule %1 updated", ПутьКСабмодулю);
    КонецЦикла;


КонецПроцедуры

Функция ЗапросИменСабмодулей()

    ЛОГ.Информация("Getting submodules names");

    Команда = Новый Команда;

    Параметры = Новый Массив;
    Параметры.Добавить("config --file .gitmodules --name-only --get-regexp path");

    Команда.УстановитьКоманду("git");
    Команда.УстановитьКодировкуВывода(КодировкаТекста.Системная);
    Команда.УстановитьРабочийКаталог(РАБОЧИЙ_КАТАЛОГ);
    Команда.ДобавитьПараметры(Параметры);
    Команда.УстановитьИсполнениеЧерезКомандыСистемы(Ложь);
    Команда.ПоказыватьВыводНемедленно(Истина);
    КодВозврата = Команда.Исполнить();

    ВыводКоманды = Команда.ПолучитьВывод();
    ВыводКоманды = СтрЗаменить(ВыводКоманды, "submodule.", "");
    ВыводКоманды = СокрЛП(СтрЗаменить(ВыводКоманды, ".path", ""));
    ВыводКоманды = СокрЛП(СтрЗаменить(ВыводКоманды, "/", "\"));
    ИменаСабмодулей = СтрРазделить(ВыводКоманды, Символы.ПС);

    // избавляемся от carret return символа
    Для Счетчик = 0 По ИменаСабмодулей.ВГраница() Цикл
        Если Счетчик = ИменаСабмодулей.ВГраница() Тогда
            Продолжить;
        КонецЕсли;
        ИменаСабмодулей[Счетчик] = ЛЕВ( ИменаСабмодулей[Счетчик], СтрДлина( ИменаСабмодулей[Счетчик]) - 1);
    КонецЦикла;

    Возврат ИменаСабмодулей;

КонецФункции


Сообщить("Initialization...");
Инициализация();
ЛОГ.Информация("Initialization completed");
ЛОГ.Информация("Updating submodules to the tip of branch...");
ОбновитьСабмодули();
ЛОГ.Информация("Submodules updated");